name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create release directory
        run: mkdir -p release

      - name: Copy binary to release directory
        run: cp target/${{ matrix.target }}/release/wg-clients release/

      - name: Upload release assets
        uses: actions/upload-artifact@v2
        with:
          name: release-${{ matrix.target }}
          path: release/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download release assets
        uses: actions/download-artifact@v2
        with:
          name: release-${{ matrix.target }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release assets to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/<binary-name>
          asset_name: <binary-name>-${{ matrix.target }}
          asset_content_type: application/octet-stream
